// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThermalClub.Modules.Core.Data;

namespace ThermalClub.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20210928053823_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ThermalClub.Modules.AdminRolePermissions.Models.AdminPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Left")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("Right")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.ToTable("AdminPermission");
                });

            modelBuilder.Entity("ThermalClub.Modules.AdminRolePermissions.Models.AdminRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SystemName")
                        .IsUnique();

                    b.ToTable("AdminRole");
                });

            modelBuilder.Entity("ThermalClub.Modules.AdminRolePermissions.Models.AdminRolesAdminPermissions", b =>
                {
                    b.Property<int>("AdminRoleId")
                        .HasColumnType("int");

                    b.Property<int>("AdminPermissionId")
                        .HasColumnType("int");

                    b.HasKey("AdminRoleId", "AdminPermissionId");

                    b.HasIndex("AdminPermissionId");

                    b.ToTable("AdminRolesAdminPermissions");
                });

            modelBuilder.Entity("ThermalClub.Modules.AdminRolePermissions.Models.AdminUsersAdminRoles", b =>
                {
                    b.Property<int>("AdminUserId")
                        .HasColumnType("int");

                    b.Property<int>("AdminRoleId")
                        .HasColumnType("int");

                    b.HasKey("AdminUserId", "AdminRoleId");

                    b.HasIndex("AdminRoleId");

                    b.ToTable("AdminUsersAdminRoles");
                });

            modelBuilder.Entity("ThermalClub.Modules.AdminUsers.Models.AdminUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ForgotPasswordToken")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("AdminUser");
                });

            modelBuilder.Entity("ThermalClub.Modules.EmailTemplates.Models.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailTemplateType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FromEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FromName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("HideEmailSection")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TemplateType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("_bccEmails")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BccEmails");

                    b.Property<string>("_ccEmails")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CcEmails");

                    b.Property<string>("_toEmails")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ToEmails");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplate");
                });

            modelBuilder.Entity("ThermalClub.Modules.ErrorLogs.Models.ErrorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsEmailSent")
                        .HasColumnType("bit");

                    b.Property<string>("Stacktrace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ErrorLog");
                });

            modelBuilder.Entity("ThermalClub.Modules.AdminRolePermissions.Models.AdminPermission", b =>
                {
                    b.HasOne("ThermalClub.Modules.AdminRolePermissions.Models.AdminPermission", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ThermalClub.Modules.AdminRolePermissions.Models.AdminRolesAdminPermissions", b =>
                {
                    b.HasOne("ThermalClub.Modules.AdminRolePermissions.Models.AdminPermission", "AdminPermission")
                        .WithMany("AdminRolesAdminPermissions")
                        .HasForeignKey("AdminPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThermalClub.Modules.AdminRolePermissions.Models.AdminRole", "AdminRole")
                        .WithMany("AdminRolesAdminPermissionses")
                        .HasForeignKey("AdminRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdminPermission");

                    b.Navigation("AdminRole");
                });

            modelBuilder.Entity("ThermalClub.Modules.AdminRolePermissions.Models.AdminUsersAdminRoles", b =>
                {
                    b.HasOne("ThermalClub.Modules.AdminRolePermissions.Models.AdminRole", "AdminRole")
                        .WithMany("AdminUsersAdminRoles")
                        .HasForeignKey("AdminRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThermalClub.Modules.AdminUsers.Models.AdminUser", "AdminUser")
                        .WithMany("AdminUsersAdminRoles")
                        .HasForeignKey("AdminUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdminRole");

                    b.Navigation("AdminUser");
                });

            modelBuilder.Entity("ThermalClub.Modules.AdminRolePermissions.Models.AdminPermission", b =>
                {
                    b.Navigation("AdminRolesAdminPermissions");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("ThermalClub.Modules.AdminRolePermissions.Models.AdminRole", b =>
                {
                    b.Navigation("AdminRolesAdminPermissionses");

                    b.Navigation("AdminUsersAdminRoles");
                });

            modelBuilder.Entity("ThermalClub.Modules.AdminUsers.Models.AdminUser", b =>
                {
                    b.Navigation("AdminUsersAdminRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
